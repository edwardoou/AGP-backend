generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

//*NOTAS
// @map -> Cambia el nombre del campo del schema en la base de datos que se generara
// @@map -> Cambia el nombre de la tabla del schema en la base de datos que se generara
// @@id -> Id unificado
// @@index -> indices no agrupados para agilizar la busqueda
// tabla TABLA[] -> este campo genera la conexion con la otra tabla para la foreign key
// tabla TABLA @relation() -> este campo no existe en la tabla, es la foreign key que hace la conexion

model Project {
  id                  Int        @id @default(autoincrement())
  modelo              String?    @db.NVarChar(20)
  nombre              String?    @db.NVarChar(100)
  prioridad           String?    @db.NVarChar(10)
  tipo                String?    @db.NVarChar(20)
  responsabilidad     String?    @db.NVarChar(20)
  descripcion         String?    @db.NVarChar(500)
  costo               Decimal?   @db.Decimal(10, 2)
  archivo             String?    @db.NVarChar(200)
  fechaIdentificacion DateTime?  @map("fecha_identificacion") @db.Date
  fechaInicio         DateTime?  @map("fecha_inicio") @db.Date
  fechaCierre         DateTime?  @map("fecha_cierre") @db.Date
  estado              String?    @db.NVarChar(20)
  areaUsuario         String?    @map("area_usuario") @db.NVarChar(80)
  areaResponsable     String?    @map("area_responsable") @db.NVarChar(80)
  empresaUsuario      String?    @map("empresa_usuario") @db.NVarChar(15)
  empresaResponsable  String?    @map("empresa_responsable") @db.NVarChar(15)
  sedeUsuario         String?    @map("sede_usuario") @db.NVarChar(10)
  sedeResponsable     String?    @map("sede_responsable") @db.NVarChar(10)
  responsableId       Int        @map("responsable_id")
  responsable         Trabajador @relation(fields: [responsableId], references: [id], onUpdate: NoAction)

  //No aparecen en la tabla
  acciones           Accion[]
  actividades        Actividad[]
  equipoTrabajadores EquipoDeTrabajo[]

  @@index([responsableId])
  @@map("PROJECTS")
}

model Trabajador {
  id              Int       @id @default(autoincrement())
  foto            String?   @db.NVarChar(100)
  nombre          String?   @db.NVarChar(100)
  telefono        String?   @db.NVarChar(15)
  direccion       String?   @db.NVarChar(100)
  observacion     String?   @db.NVarChar(500)
  sexo            String?   @db.NVarChar(10)
  fechaNacimiento DateTime? @map("fecha_nacimiento") @db.Date
  fechaIngreso    DateTime? @map("fecha_ingreso") @db.Date
  fechaCese       DateTime? @map("fecha_cese") @db.Date
  categoria       String?   @db.NVarChar(100)
  sede            String?   @db.NVarChar(45)
  area            String?   @db.NVarChar(80)
  puesto          String?   @db.NVarChar(100)
  empresa         String?   @db.NVarChar(15)

  //No aparecen en la tabla
  acciones           Accion[]
  actividades        Actividad[]
  projects           Project[]
  equipoTrabajadores EquipoDeTrabajo[]
  @@map("TRABAJADORES")
}

model EquipoDeTrabajo {
  trabajadorId Int        @map("trabajador_id")
  projectId    Int        @map("project_id")
  projects     Project    @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  trabajadores Trabajador @relation(fields: [trabajadorId], references: [id], onUpdate: NoAction)

  @@id([trabajadorId, projectId])
  @@index([projectId])
  @@index([trabajadorId])
  @@map("EQUIPO_DE_TRABAJO")
}

model Accion {
  id            Int        @id @default(autoincrement())
  nombre        String?    @db.NVarChar(100)
  tipo          String?    @db.NVarChar(20)
  asistencia    String?    @db.NVarChar(50)
  descripcion   String?    @db.NVarChar(500)
  archivo       String?    @db.NVarChar(200)
  fechaLimite   DateTime?  @map("fecha_limite") @db.Date
  estado        String?    @db.NVarChar(100)
  projectId     Int        @map("project_id")
  responsableId Int        @map("responsable_id")
  projects      Project    @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  trabajadores  Trabajador @relation(fields: [responsableId], references: [id], onUpdate: NoAction)

  @@index([projectId])
  @@index([responsableId])
  @@map("ACCIONES")
}

model Actividad {
  id              Int        @id @default(autoincrement())
  nombre          String?    @db.NVarChar(100)
  responsabilidad String?    @db.NVarChar(10)
  descripcion     String?    @db.NVarChar(500)
  archivo         String?    @db.NVarChar(200)
  fechaLimite     DateTime?  @map("fecha_limite") @db.Date
  estado          String?    @db.NVarChar(100)
  projectId       Int        @map("project_id")
  responsableId   Int        @map("responsable_id")
  projects        Project    @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  trabajadores    Trabajador @relation(fields: [responsableId], references: [id], onUpdate: NoAction)

  @@index([projectId])
  @@index([responsableId])
  @@map("ACTIVIDADES")
}
